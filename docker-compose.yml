services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6380:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    restart: always
    env_file: .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media

    command: >
      gunicorn main.wsgi:application
      --bind unix:/app/sockets/gunicorn.sock
      --workers 7
      --timeout 60
      --access-logfile /app/logs/django.log

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8888:80"  # Прокидываем порт 8888 на 80 внутри контейнера
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
      - ./app/sockets:/app/sockets  # Монтируем папку с сокетами
    depends_on:
      - web

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    restart: always
    depends_on:
      - web
      - redis
    command: celery -A main worker --loglevel=info

volumes:
  postgres_data:
  static_volume:
  media_volume: